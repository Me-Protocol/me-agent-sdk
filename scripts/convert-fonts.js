/**
 * Convert font files to base64 for embedding in CSS
 * Run: node scripts/convert-fonts.js
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const fontsDir = path.join(__dirname, '../src/assets/fonts');
const outputFile = path.join(__dirname, '../src/core/fonts.ts');

// Font files to convert (only the ones we actually use)
const fonts = [
  { file: 'ClashDisplay-Regular.otf', weight: 400, style: 'normal' },
  { file: 'ClashDisplay-Medium.otf', weight: 500, style: 'normal' },
  { file: 'ClashDisplay-Semibold.otf', weight: 600, style: 'normal' },
  { file: 'ClashDisplay-Bold.otf', weight: 700, style: 'normal' },
];

console.log('Converting fonts to base64...\n');

let output = `/**
 * Clash Display Font - Base64 Encoded
 * Auto-generated by scripts/convert-fonts.js
 * DO NOT EDIT MANUALLY
 */

export const clashDisplayFonts = \`
`;

fonts.forEach((font) => {
  const fontPath = path.join(fontsDir, font.file);
  
  if (!fs.existsSync(fontPath)) {
    console.error(`‚ùå Font file not found: ${font.file}`);
    return;
  }

  const fontData = fs.readFileSync(fontPath);
  const base64 = fontData.toString('base64');
  
  console.log(`‚úÖ ${font.file} (${(base64.length / 1024).toFixed(2)} KB base64)`);

  output += `  @font-face {
    font-family: 'Clash Display';
    font-weight: ${font.weight};
    font-style: ${font.style};
    font-display: swap;
    src: url(data:font/opentype;base64,${base64}) format('opentype');
  }

`;
});

output += `\`;
`;

// Write to output file
fs.writeFileSync(outputFile, output, 'utf8');

console.log(`\n‚ú® Fonts converted and saved to: ${outputFile}`);
console.log('üìù Now import this in your styles.ts file!');

