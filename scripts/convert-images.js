/**
 * Convert image files to base64 for embedding in CSS
 * Run: node scripts/convert-images.js
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const imagesDir = path.join(__dirname, '../src/assets/images');
const outputFile = path.join(__dirname, '../src/core/images.ts');

// Images to convert
const images = [
  { file: 'fire.gif', name: 'fire' },
];

console.log('Converting images to base64...\n');

let output = `/**
 * SDK Images - Base64 Encoded
 * Auto-generated by scripts/convert-images.js
 * DO NOT EDIT MANUALLY
 */

`;

images.forEach((image) => {
  const imagePath = path.join(imagesDir, image.file);
  
  if (!fs.existsSync(imagePath)) {
    console.error(`‚ùå Image file not found: ${image.file}`);
    return;
  }

  const imageData = fs.readFileSync(imagePath);
  const base64 = imageData.toString('base64');
  const mimeType = image.file.endsWith('.gif') ? 'image/gif' : 
                   image.file.endsWith('.png') ? 'image/png' : 
                   image.file.endsWith('.jpg') || image.file.endsWith('.jpeg') ? 'image/jpeg' : 
                   'image/png';
  
  console.log(`‚úÖ ${image.file} (${(base64.length / 1024).toFixed(2)} KB base64)`);

  output += `export const ${image.name}Image = 'data:${mimeType};base64,${base64}';\n\n`;
});

// Write to output file
fs.writeFileSync(outputFile, output, 'utf8');

console.log(`\n‚ú® Images converted and saved to: ${outputFile}`);
console.log('üìù Now import and use these in your components!');

